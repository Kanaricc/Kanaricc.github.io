<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kanari&#39;s blog</title>
  <icon>https://blog.kanari.moe/icon.png</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.kanari.moe/"/>
  <updated>2019-09-24T15:21:00.991Z</updated>
  <id>https://blog.kanari.moe/</id>
  
  <author>
    <name>Kanari</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rust学习记录</title>
    <link href="https://blog.kanari.moe/2019/09/24/learning-rust/"/>
    <id>https://blog.kanari.moe/2019/09/24/learning-rust/</id>
    <published>2019-09-24T14:56:47.000Z</published>
    <updated>2019-09-24T15:21:00.991Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;基于对Rust的浅薄理解，它一定是未来一门重要的语言。因此，为了进一步了解这哥们，对Rust的学习将逐步展开。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="study" scheme="https://blog.kanari.moe/categories/study/"/>
    
    
      <category term="rust" scheme="https://blog.kanari.moe/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>[CF1221F] Choose a Sequence</title>
    <link href="https://blog.kanari.moe/2019/09/23/problem-choose-a-sequence/"/>
    <id>https://blog.kanari.moe/2019/09/23/problem-choose-a-sequence/</id>
    <published>2019-09-23T15:46:09.000Z</published>
    <updated>2019-09-23T15:51:32.251Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Petya recently found a game &quot;Choose a Square&quot;. In this game, there are nn points numbered from 11 to nn on an infinite field. The ii-th
        
      
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="线段树" scheme="https://blog.kanari.moe/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>来康康Gatsby.js</title>
    <link href="https://blog.kanari.moe/2019/09/21/starting-gatsbyjs/"/>
    <id>https://blog.kanari.moe/2019/09/21/starting-gatsbyjs/</id>
    <published>2019-09-21T13:00:54.000Z</published>
    <updated>2019-09-23T15:58:01.193Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;昨天发现notion用学生邮箱可以免费领personal
        
      
    
    </summary>
    
    
      <category term="闲扯" scheme="https://blog.kanari.moe/categories/%E9%97%B2%E6%89%AF/"/>
    
    
      <category term="gatsby" scheme="https://blog.kanari.moe/tags/gatsby/"/>
    
  </entry>
  
  <entry>
    <title>使用Mathematica绘制股票相关曲线</title>
    <link href="https://blog.kanari.moe/2019/09/20/stock-with-mathematica/"/>
    <id>https://blog.kanari.moe/2019/09/20/stock-with-mathematica/</id>
    <published>2019-09-20T01:33:23.000Z</published>
    <updated>2019-09-20T02:46:26.443Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Mathematica是个好东西。虽然早有耳闻功能强大，但是没想到强大到这种地步。&lt;/p&gt;
&lt;p&gt;原本因为课程原因，研究了一下如何在Mathematica里绘制股票数据。不过现在&lt;strong&gt;停止&lt;/strong&gt;，只完成了一小部分。剩下的……想折腾的话，按照已经有的代
        
      
    
    </summary>
    
    
      <category term="闲扯" scheme="https://blog.kanari.moe/categories/%E9%97%B2%E6%89%AF/"/>
    
    
      <category term="mathematica" scheme="https://blog.kanari.moe/tags/mathematica/"/>
    
  </entry>
  
  <entry>
    <title>一些筛法的题</title>
    <link href="https://blog.kanari.moe/2019/09/05/some-sieves/"/>
    <id>https://blog.kanari.moe/2019/09/05/some-sieves/</id>
    <published>2019-09-05T12:22:49.000Z</published>
    <updated>2019-09-19T01:06:44.817Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;技巧&quot;&gt;技巧&lt;/h2&gt;
&lt;h3 id=&quot;自然溢出&quot;&gt;自然溢出&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;自然溢出不会影响低位数据,所以有的时候你不需要取模,而是一个unsigned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;除法取模&quot;&gt;除法取模&lt;/h3&gt;
&lt;p&gt;对于式子&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[
\frac {a \times b}{c} \mod p \equiv \frac{a \times b \mod cp}{c}
\]&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;细节&quot;&gt;细节&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;注意数据类型,例如&lt;code&gt;6*(ll)(1&amp;lt;&amp;lt;30)&lt;/code&gt;是要出问题的&lt;/li&gt;
&lt;li&gt;注意函数在&lt;span class=&quot;math inline&quot;&gt;\(f(1)\)&lt;/span&gt;位置的取值,不要忘记初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;divisor&quot;&gt;Divisor&lt;/h2&gt;
&lt;p&gt;Given &lt;span class=&quot;math inline&quot;&gt;\(n\)&lt;/span&gt; and &lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt; (&lt;span class=&quot;math inline&quot;&gt;\(1 \leq n,m \leq 5 \times 10^4\)&lt;/span&gt;), please calculate&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="筛法" scheme="https://blog.kanari.moe/tags/%E7%AD%9B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>[HDU 6704] Kth Occurrence</title>
    <link href="https://blog.kanari.moe/2019/08/25/problem-kth-occurrence/"/>
    <id>https://blog.kanari.moe/2019/08/25/problem-kth-occurrence/</id>
    <published>2019-08-25T07:11:56.000Z</published>
    <updated>2019-09-19T02:12:11.489Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;You are given a string S consisting of only lowercase english letters and some queries.&lt;/p&gt;
&lt;p&gt;For each query (l,r,k), please output the starting position of the k-th occurence of the substring SlSl+1...Sr in S.&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;第一个问题是快速找出所有出现的子串的位置,可以使用后缀数组.这些字串出现在sa的一个连续的区间中.&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="后缀数组" scheme="https://blog.kanari.moe/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/"/>
    
      <category term="主席树" scheme="https://blog.kanari.moe/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    
      <category term="RMQ" scheme="https://blog.kanari.moe/tags/RMQ/"/>
    
  </entry>
  
  <entry>
    <title>记一个bug (HDU 6703)</title>
    <link href="https://blog.kanari.moe/2019/08/24/a-wonderful-bug/"/>
    <id>https://blog.kanari.moe/2019/08/24/a-wonderful-bug/</id>
    <published>2019-08-24T14:28:38.000Z</published>
    <updated>2019-09-19T01:22:01.068Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;You are given an array a1,a2,...,an(∀i∈[1,n],1≤ai≤n). Initially, each element of the array is &lt;strong&gt;unique&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Moreover,
        
      
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="线段树" scheme="https://blog.kanari.moe/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>[FZU 2204]Seven</title>
    <link href="https://blog.kanari.moe/2019/08/10/problem-seven/"/>
    <id>https://blog.kanari.moe/2019/08/10/problem-seven/</id>
    <published>2019-08-10T02:53:29.000Z</published>
    <updated>2019-09-19T02:13:38.991Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;n个有标号的球围成一个圈。每个球有两种颜色可以选择黑或白染色。问有多少种方案使得没有出现连续白球7个或连续黑球7个。&lt;/p&gt;
&lt;p&gt;对方案数mod 2015，球最多有100000个。&lt;/p&gt;
&lt;h1
        
      
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="计数" scheme="https://blog.kanari.moe/tags/%E8%AE%A1%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>[HDU6638] Snowy Smile</title>
    <link href="https://blog.kanari.moe/2019/08/07/problem-snowy-smile/"/>
    <id>https://blog.kanari.moe/2019/08/07/problem-snowy-smile/</id>
    <published>2019-08-07T12:45:28.000Z</published>
    <updated>2019-09-19T02:15:13.403Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;There are n pirate chests buried in Byteland, labeled by 1,2,…,n. The i-th chest&#39;s location is (xi,yi), and its value is wi, wi can be negative since the pirate can add some poisonous gases into the chest. When you open the i-th pirate chest, you will get wi value.&lt;/p&gt;
&lt;p&gt;You want to make money from these pirate chests. You can select a rectangle, the sides of which are all paralleled to the axes, and then all the chests inside it or on its border will be opened. Note that you must open all the chests within that range regardless of their values are positive or negative. But you can choose a rectangle with nothing in it to get a zero sum.&lt;/p&gt;
&lt;p&gt;Please write a program to find the best rectangle with maximum total value.&lt;/p&gt;
&lt;p&gt;The first line of the input contains an integer T(1≤T≤100), denoting the number of test cases.&lt;/p&gt;
&lt;p&gt;In each test case, there is one integer n(1≤n≤2000) in the first line, denoting the number of pirate chests.&lt;/p&gt;
&lt;p&gt;For the next n lines, each line contains three integers xi,yi,wi(−109≤xi,yi,wi≤109), denoting each pirate chest.&lt;/p&gt;
&lt;p&gt;It is guaranteed that ∑n≤10000.&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;首先，我没做出来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="线段树" scheme="https://blog.kanari.moe/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>mo-s-algorithm</title>
    <link href="https://blog.kanari.moe/2019/08/03/mo-s-algorithm/"/>
    <id>https://blog.kanari.moe/2019/08/03/mo-s-algorithm/</id>
    <published>2019-08-03T05:47:38.000Z</published>
    <updated>2019-09-19T02:37:44.110Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;对于可以离线的区间询问问题，莫队算法提出了一种可以在&lt;span class=&quot;math inline&quot;&gt;\(O(n\sqrt n)\)&lt;/span&gt;(无修改)，&lt;span class=&quot;math inline&quot;&gt;\(n^{3/5}\)&lt;/span&gt;(带修改)内得出答案的方法。&lt;/p&gt;
&lt;p&gt;主要的思路是对询问离线并分块，利用在2个区间间答案的&lt;strong&gt;快速转移&lt;/strong&gt;（如果无法找到快速转移的方法，就没法用了）降低复杂度。&lt;/p&gt;
    
    </summary>
    
    
      <category term="study" scheme="https://blog.kanari.moe/categories/study/"/>
    
    
      <category term="莫队" scheme="https://blog.kanari.moe/tags/%E8%8E%AB%E9%98%9F/"/>
    
  </entry>
  
  <entry>
    <title>Distribution of Books</title>
    <link href="https://blog.kanari.moe/2019/08/01/problem-distribution-of-books/"/>
    <id>https://blog.kanari.moe/2019/08/01/problem-distribution-of-books/</id>
    <published>2019-08-01T07:15:52.000Z</published>
    <updated>2019-09-19T02:08:41.453Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;zz6d likes reading very much, so he bought a lot of books. One day, zz6d brought n books to a classroom in school. The books of zz6d is
        
      
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="线段树" scheme="https://blog.kanari.moe/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="离散化" scheme="https://blog.kanari.moe/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Fansblog</title>
    <link href="https://blog.kanari.moe/2019/08/01/Fansblog/"/>
    <id>https://blog.kanari.moe/2019/08/01/Fansblog/</id>
    <published>2019-08-01T07:15:13.000Z</published>
    <updated>2019-09-19T01:51:42.681Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Farmer John keeps a website called ‘FansBlog’ .Everyday , there are many people visited this blog.One day, he find the visits has reached P , which is a prime number.He thinks it is a interesting fact.And he remembers that the visits had reached another prime number.He try to find out the largest prime number Q ( Q &amp;lt; P ) ,and get the answer of Q! Module P.But he is too busy to find out the answer. So he ask you for help. ( Q! is the product of all positive integers less than or equal to n: n! = n * (n-1) * (n-2) * (n-3) &lt;em&gt;… &lt;/em&gt; 3 * 2 * 1 . For example, 4! = 4 * 3 * 2 * 1 = 24 )&lt;/p&gt;
&lt;p&gt;First line contains an number T(1&amp;lt;=T&amp;lt;=10) indicating the number of testcases. Then T line follows, each contains a positive prime number P (1e9≤p≤1e14)&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="威尔逊定理" scheme="https://blog.kanari.moe/tags/%E5%A8%81%E5%B0%94%E9%80%8A%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>咸鱼数论</title>
    <link href="https://blog.kanari.moe/2019/07/22/numeric-water/"/>
    <id>https://blog.kanari.moe/2019/07/22/numeric-water/</id>
    <published>2019-07-22T07:59:12.000Z</published>
    <updated>2019-09-19T02:37:50.473Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;一些结论&quot;&gt;一些结论&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;\(N!\)&lt;/span&gt;的质因数分解中某质数的指数为$_{r=1}^{} [ n/p^r ]
        
      
    
    </summary>
    
    
      <category term="study" scheme="https://blog.kanari.moe/categories/study/"/>
    
    
      <category term="数论" scheme="https://blog.kanari.moe/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>水的合集 1</title>
    <link href="https://blog.kanari.moe/2019/07/22/waterful-summary-1/"/>
    <id>https://blog.kanari.moe/2019/07/22/waterful-summary-1/</id>
    <published>2019-07-22T07:59:12.000Z</published>
    <updated>2019-09-19T02:18:42.954Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;集合挑选&quot;&gt;集合挑选&lt;/h2&gt;
&lt;p&gt;从给定的N个集合中各挑出一个数并求和，求出前&lt;span class=&quot;math inline&quot;&gt;\(K\)&lt;/span&gt;大的&lt;span class=&quot;math
        
      
    
    </summary>
    
    
      <category term="study" scheme="https://blog.kanari.moe/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>明日方舟工具</title>
    <link href="https://blog.kanari.moe/2019/07/20/arknights-tools/"/>
    <id>https://blog.kanari.moe/2019/07/20/arknights-tools/</id>
    <published>2019-07-20T09:28:33.000Z</published>
    <updated>2019-09-19T02:37:17.275Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/07/20/arknights-tools/img.jpg&quot; title=&quot;Penguin Logistics&quot;&gt;
&lt;p&gt;虽然类型完全不一样，但明日方舟大概是我继玩爆Minecraft之后另一个喜欢的游戏了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="projects" scheme="https://blog.kanari.moe/categories/projects/"/>
    
    
      <category term="小工具" scheme="https://blog.kanari.moe/tags/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>[BUPT WARMUP|CF] 珍珠奶茶</title>
    <link href="https://blog.kanari.moe/2019/07/20/problem-bupt-milk-tea/"/>
    <id>https://blog.kanari.moe/2019/07/20/problem-bupt-milk-tea/</id>
    <published>2019-07-20T09:12:34.000Z</published>
    <updated>2019-09-19T02:11:49.991Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给出一个&lt;span class=&quot;math inline&quot;&gt;\(N \times N\)&lt;/span&gt;的非负整数矩阵，要求找到一条从左上角数字到右下角数字的路线，且&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能向右或者下走。&lt;/li&gt;
&lt;li&gt;将经过数字相乘后得到的结果，使其末尾的“0”最少。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[
N \leq 1000
\]&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
      <category term="数论" scheme="https://blog.kanari.moe/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="动态规划" scheme="https://blog.kanari.moe/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>blog迁移</title>
    <link href="https://blog.kanari.moe/2019/07/13/blog-upgrade/"/>
    <id>https://blog.kanari.moe/2019/07/13/blog-upgrade/</id>
    <published>2019-07-13T13:00:44.000Z</published>
    <updated>2019-09-19T01:25:36.934Z</updated>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/07/13/blog-upgrade/girl.jpg&quot;&gt;
&lt;p&gt;又回到了静态blog😀.果然这样才是最吼的.&lt;/p&gt;
&lt;h2 id=&quot;静态blog编译器&quot;&gt;静态blog编译器&lt;/h2&gt;
&lt;p&gt;现在流行的静态blog编译器大概有这么几种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Node.js&lt;/code&gt;的&lt;code&gt;Hexo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Python&lt;/code&gt;的&lt;code&gt;Pelican&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ruby&lt;/code&gt;的&lt;code&gt;Jekyll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Golang&lt;/code&gt;的&lt;code&gt;Hugo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Colorful Tree</title>
    <link href="https://blog.kanari.moe/2019/07/12/colorful-tree/"/>
    <id>https://blog.kanari.moe/2019/07/12/colorful-tree/</id>
    <published>2019-07-12T06:04:36.000Z</published>
    <updated>2019-09-19T01:27:36.249Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;There is a tree having n nodes, the i-th node of which has a type of color, denoted by an integer &lt;span class=&quot;math
        
      
    
    </summary>
    
    
      <category term="coding" scheme="https://blog.kanari.moe/categories/coding/"/>
    
    
  </entry>
  
  <entry>
    <title>快速傅里叶变换</title>
    <link href="https://blog.kanari.moe/2019/07/12/fft/"/>
    <id>https://blog.kanari.moe/2019/07/12/fft/</id>
    <published>2019-07-12T06:03:31.000Z</published>
    <updated>2019-09-19T13:07:38.811Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写代码是不可能写代码的,今下午是不想写代码的.不想写代码,又不想咸鱼,就只能靠学点新东西来假装自己在工作的样子,心里才能好受些.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;窃格码拉&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;把2年前就听过但是没学的FFT这次看看吧.&lt;/p&gt;
&lt;p&gt;几乎可以肯定,下面的内容肯定会出锅.&lt;/p&gt;
    
    </summary>
    
    
      <category term="study" scheme="https://blog.kanari.moe/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>did-i-write-qsort-right</title>
    <link href="https://blog.kanari.moe/2019/07/12/did-i-write-qsort-right/"/>
    <id>https://blog.kanari.moe/2019/07/12/did-i-write-qsort-right/</id>
    <published>2019-07-12T06:02:33.000Z</published>
    <updated>2019-09-19T01:48:19.424Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;众所周知，快速排序的时间复杂度是&lt;span class=&quot;math inline&quot;&gt;\(O(n\lg n)\)&lt;/span&gt;的。然而因为我太菜，写出来的快速排序一不小心就成了&lt;span class=&quot;math inline&quot;&gt;\(O(n^2)\)&lt;/span&gt;...&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲扯" scheme="https://blog.kanari.moe/categories/%E9%97%B2%E6%89%AF/"/>
    
    
      <category term="排序" scheme="https://blog.kanari.moe/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
